.SignUpForm {
	padding: 2em 3em; // give it some space
	background-color: var(--dark-3);
	border: var(--dark-1) 2px solid;
	border-radius: 8px;
	width: 300px; // fixed width because it is just an element on the page
	margin: 100px auto;
	display: flex;
	flex-direction: column; // tell the inputs which way to "line-up"
	box-shadow: 5px 5px 20px var(--dark-1);
	transition: all 0.5s;
	opacity: 0;
	&.mounted {
		// a transition thing, if we are mounted show the full opactity etc.
		opacity: 1;
		margin: 80px auto;
	}
	& .Title {
		// the text at the top
		margin: auto;
		text-transform: uppercase; // all uppercase
		letter-spacing: 0.3ch;
		font-size: 26px;
		color: var(--accent-1); // accented
		margin-bottom: 12px; // leave some space underneath
	}
	& .Field {
		margin: 0.7em auto;
		& input[type="text"],
		& input[type="password"] {
			// for our inputs
			background-color: transparent; // see through to the background
			border: 0; // no border except...
			border-bottom: 2px solid var(--accent-2); // we only want a border on the bottom
			padding: 0.7em;
			font-size: 15px;
			font-weight: 500;
			color: var(--light-1);
			width: 200px; // not as wide as the whole thing
			&:focus {
				// when clicked on
				outline: none; // we dont want an ugly default css input border
				border-color: var(
					--accent-2
				); // instead slightly modify the border colour which is only on the bottom
			}
		}
		& input[type="checkbox"] {
			// checkbox formatting settings. This isnt actually even used in my program, so probably don't need to worry too much
			// about this
			display: inline;
			margin: auto;
		}
	}
	& .invalid {
		// if it is invalid
		& input[type="text"],
		& input[type="password"] {
			border-color: var(--error-1); // make the border red
			&:focus {
				border-color: var(--error-2); // if we focus slightly change the border colour
			}
		}
	}

	& .ValidityMethod {
		// how are we going to fix it
		height: 10px; // v small
		color: var(--error-1);
		font-size: 10px;
		text-align: center; // like center align in word
		margin-top: 3px; // a bit of space above
	}

	& .Alert {
		text-align: center; // if we get an alert
		margin: 0.5rem 0 0;
		padding: 1rem;
		font-size: 12px;
		&.message {
			// if it is a good thing i.e. success!
			color: lightgreen; // colour can be constant
		}
		&.error {
			// if it is a bad thing i.e. username already taken
			color: red;
		}
	}

	& button.Submit {
		// slight mods to the submit button, shouldn't do too much since we are using the button component
		margin: 0.7em;
		margin-left: auto;
		margin-right: auto;
	}
}

/* make autofill not mess up the colour scheme */
// but I'm not even using this really, so don't worry about it

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
	-webkit-box-shadow: 0 0 0 30px var(--dark-3) inset !important;
	box-shadow: 0 0 0 3px var(--dark-3) inset !important;
}

input:-webkit-autofill {
	-webkit-text-fill-color: var(--light-1) !important;
}

// if the screen is really small, make it a little smaller just so it fits
// mobile modification really here
@media only screen and (max-width: 600px) {
	.SignUpForm {
		width: 200px;
	}
}
